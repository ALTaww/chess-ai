{"version":3,"file":"static/js/995.d9ec5e43.chunk.js","mappings":"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","sources":["webpack://stockfish-web/./src/shared/ui/FenInput/FenInput.module.scss?c4c8","webpack://stockfish-web/./src/shared/ui/Input/Input.module.scss?eef6","shared/ui/Input/Input.tsx","shared/ui/FenInput/FenInput.tsx","webpack://stockfish-web/./src/widgets/ManualBoardEditor/ui/ManualBoardEditor.module.scss?7b43","widgets/ManualBoardEditor/ui/ManualBoardEditor.tsx","pages/BoardEditor/ui/BoardEditor.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"FenInput\":\"FenInput_FenInput__+TRAY\",\"copyButton\":\"FenInput_copyButton__j+z8x\"};","// extracted by mini-css-extract-plugin\nexport default {\"Input\":\"Input_Input__hHLh7\"};","import { classNames } from \"shared/lib/classNames/classNames\";\r\nimport cls from \"./Input.module.scss\";\r\nimport { InputHTMLAttributes } from \"react\";\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  className?: string;\r\n}\r\n\r\nexport const Input = (props: InputProps) => {\r\n  const { className, ...restProps } = props;\r\n  return (\r\n    <input className={classNames(cls.Input, {}, [className])} {...restProps} />\r\n  );\r\n};\r\n","import { classNames } from \"shared/lib/classNames/classNames\";\r\nimport cls from \"./FenInput.module.scss\";\r\nimport { Input } from \"../Input/Input\";\r\nimport { ChangeEvent } from \"react\";\r\nimport { Button, ButtonSize, ButtonTheme } from \"../Button/Button\";\r\nimport copyImg from \"shared/assets/copy.png\";\r\n\r\ninterface FenInputProps {\r\n  className?: string;\r\n  fenPosition: string;\r\n  onChange: (fen: string) => void;\r\n}\r\n\r\nexport const FenInput = ({\r\n  className,\r\n  fenPosition,\r\n  onChange,\r\n}: FenInputProps) => {\r\n  const handleFenInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (onChange) {\r\n      onChange(e.target.value);\r\n    }\r\n  };\r\n\r\n  const copy = () => {\r\n    navigator.clipboard.writeText(fenPosition);\r\n    console.log(\"copied\");\r\n  };\r\n\r\n  return (\r\n    <div className={classNames(cls.FenInput, {}, [className])}>\r\n      <Input\r\n        value={fenPosition}\r\n        onChange={handleFenInputChange}\r\n        placeholder=\"Вставьте позицию FEN, чтобы начать редактирование\"\r\n      />\r\n      <Button\r\n        onClick={copy}\r\n        theme={ButtonTheme.CLEAR}\r\n        className={cls.copyButton}\r\n        square\r\n      >\r\n        <img src={copyImg} alt=\"Копировать\" />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"piecesContainer\":\"ManualBoardEditor_piecesContainer__zbyqX\",\"buttons\":\"ManualBoardEditor_buttons__jfaF6\"};","import { classNames } from \"shared/lib/classNames/classNames\";\r\nimport cls from \"./ManualBoardEditor.module.scss\";\r\nimport {\r\n  Chessboard,\r\n  ChessboardDnDProvider,\r\n  SparePiece,\r\n} from \"react-chessboard\";\r\nimport { Piece } from \"react-chessboard/dist/chessboard/types\";\r\nimport { useMemo, useState } from \"react\";\r\nimport Chess from \"chess.js\";\r\nimport { Button } from \"shared/ui/Button/Button\";\r\nimport { FenInput } from \"shared/ui/FenInput/FenInput\";\r\n\r\ninterface ManualBoardEditorProps {\r\n  className?: string;\r\n}\r\n\r\nexport const ManualBoardEditor = ({ className }: ManualBoardEditorProps) => {\r\n  const game = useMemo(() => new Chess(\"8/8/8/8/8/8/8/8 w - - 0 1\"), []); // пустая доска\r\n  const [boardOrientation, setBoardOrientation] = useState<\"white\" | \"black\">(\r\n    \"white\"\r\n  );\r\n  const [boardWidth, setBoardWidth] = useState(360);\r\n  const [fenPosition, setFenPosition] = useState<string>(game.fen());\r\n\r\n  const handleSparePieceDrop = (piece, targetSquare) => {\r\n    const color = piece[0];\r\n    const type = piece[1].toLowerCase();\r\n    const success = game.put(\r\n      {\r\n        type,\r\n        color,\r\n      },\r\n      targetSquare\r\n    );\r\n    if (success) {\r\n      setFenPosition(game.fen());\r\n    } else {\r\n      alert(`На доске уже есть ${color === \"w\" ? \"белый\" : \"черный\"} КОРОЛЬ`);\r\n    }\r\n    return success;\r\n  };\r\n  const handlePieceDrop = (sourceSquare, targetSquare, piece) => {\r\n    const color = piece[0];\r\n    const type = piece[1].toLowerCase();\r\n\r\n    // это хак, чтобы обойти ошибку chess.js, которая исправлена в последней версии https://github.com/jhlywa/chess.js/pull/426\r\n    game.remove(sourceSquare);\r\n    game.remove(targetSquare);\r\n    const success = game.put(\r\n      {\r\n        type,\r\n        color,\r\n      },\r\n      targetSquare\r\n    );\r\n    if (success) setFenPosition(game.fen());\r\n    return success;\r\n  };\r\n  const handlePieceDropOffBoard = (sourceSquare) => {\r\n    game.remove(sourceSquare);\r\n    setFenPosition(game.fen());\r\n  };\r\n  const handleFenInputChange = (fen: string) => {\r\n    const { valid } = game.validate_fen(fen);\r\n\r\n    if (valid) {\r\n      game.load(fen);\r\n      setFenPosition(game.fen());\r\n    } else {\r\n      console.log(\"Неправильный FEN\");\r\n    }\r\n  };\r\n\r\n  const pieces = [\r\n    \"wP\",\r\n    \"wN\",\r\n    \"wB\",\r\n    \"wR\",\r\n    \"wQ\",\r\n    \"wK\",\r\n    \"bP\",\r\n    \"bN\",\r\n    \"bB\",\r\n    \"bR\",\r\n    \"bQ\",\r\n    \"bK\",\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className={classNames(cls.ManualBoardEditor, {}, [className])}\r\n      style={{\r\n        margin: \"0 auto\",\r\n        maxWidth: \"60vh\",\r\n      }}\r\n    >\r\n      <ChessboardDnDProvider>\r\n        <div>\r\n          <div className={cls.piecesContainer}>\r\n            {pieces.slice(6, 12).map((piece) => (\r\n              <SparePiece\r\n                key={piece}\r\n                piece={piece as Piece}\r\n                width={boardWidth / 8}\r\n                dndId=\"ManualBoardEditor\"\r\n              />\r\n            ))}\r\n          </div>\r\n          <Chessboard\r\n            id=\"ManualBoardEditor\"\r\n            boardOrientation={boardOrientation}\r\n            position={game.fen()}\r\n            onSparePieceDrop={handleSparePieceDrop}\r\n            onPieceDrop={handlePieceDrop}\r\n            onPieceDropOffBoard={handlePieceDropOffBoard}\r\n            dropOffBoardAction=\"trash\"\r\n            customBoardStyle={{\r\n              borderRadius: \"4px\",\r\n              boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.5)\",\r\n            }}\r\n          />\r\n          <div className={cls.piecesContainer}>\r\n            {pieces.slice(0, 6).map((piece) => (\r\n              <SparePiece\r\n                key={piece}\r\n                piece={piece as Piece}\r\n                width={boardWidth / 8}\r\n                dndId=\"ManualBoardEditor\"\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className={cls.buttons}>\r\n          <Button\r\n            onClick={() => {\r\n              game.reset();\r\n              setFenPosition(game.fen());\r\n            }}\r\n          >\r\n            Начальная позиция ♟️\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              game.clear();\r\n              setFenPosition(game.fen());\r\n            }}\r\n          >\r\n            Очистить доску 🗑️\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setBoardOrientation(\r\n                boardOrientation === \"white\" ? \"black\" : \"white\"\r\n              );\r\n            }}\r\n          >\r\n            Перевернуть доску 🔁\r\n          </Button>\r\n        </div>\r\n        <FenInput fenPosition={fenPosition} onChange={handleFenInputChange} />\r\n        <p>Чтобы удалить фигуру из доски - вынесите её за пределы</p>\r\n        <p>Чтобы первыми ходили черные - в поле ввода замените w на b</p>\r\n      </ChessboardDnDProvider>\r\n    </div>\r\n  );\r\n};\r\n","import { ManualBoardEditor } from \"widgets/ManualBoardEditor\";\r\n\r\nconst BoardEditor = () => {\r\n  return (\r\n    <div>\r\n      <ManualBoardEditor />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardEditor;\r\n"],"names":["Input","props","className","restProps","_objectWithoutProperties","_excluded","_jsx","_objectSpread","classNames","cls","FenInput","_ref","fenPosition","onChange","_jsxs","children","value","e","target","placeholder","Button","onClick","copy","navigator","clipboard","writeText","console","log","theme","ButtonTheme","CLEAR","square","src","alt","ManualBoardEditor","game","useMemo","Chess","boardOrientation","setBoardOrientation","useState","boardWidth","setBoardWidth","setFenPosition","fen","pieces","style","margin","maxWidth","ChessboardDnDProvider","piecesContainer","slice","map","piece","SparePiece","width","dndId","Chessboard","id","position","onSparePieceDrop","handleSparePieceDrop","targetSquare","color","type","toLowerCase","success","put","alert","concat","onPieceDrop","handlePieceDrop","sourceSquare","remove","onPieceDropOffBoard","dropOffBoardAction","customBoardStyle","borderRadius","boxShadow","buttons","reset","clear","valid","validate_fen","load","BoardEditor"],"sourceRoot":""}