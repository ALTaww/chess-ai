{"version":3,"file":"static/js/11.cf170db1.chunk.js","mappings":"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","sources":["webpack://stockfish-web/./src/widgets/StockfishOnlineChessboard/ui/StockfishOnlineChessboard.module.scss?5fb4","widgets/StockfishOnlineChessboard/ui/StockfishOnlineChessboard.tsx","shared/lib/createNewAbortController/createNewAbortController.ts","pages/StockfishOnline/ui/StockfishOnline.tsx","shared/config/consts/urlParams.ts","shared/lib/sounds/sounds.ts","webpack://stockfish-web/./src/shared/ui/FenInput/FenInput.module.scss?c4c8","webpack://stockfish-web/./src/shared/ui/Input/Input.module.scss?eef6","shared/ui/Input/Input.tsx","shared/ui/FenInput/FenInput.tsx","shared/ui/Portal/Portal.tsx","webpack://stockfish-web/./src/shared/ui/Modal/Modal.module.scss?37a1","shared/ui/Modal/Modal.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"StockfishOnlineChessboard\":\"StockfishOnlineChessboard_StockfishOnlineChessboard__Xm861\",\"chessboardWrapper\":\"StockfishOnlineChessboard_chessboardWrapper__LJGcy\",\"buttons\":\"StockfishOnlineChessboard_buttons__0Mnm9\"};","import { classNames } from \"shared/lib/classNames/classNames\";\r\nimport cls from \"./StockfishOnlineChessboard.module.scss\";\r\nimport { Button, ButtonTheme } from \"shared/ui/Button/Button\";\r\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport Chess from \"chess.js\";\r\nimport { Chessboard, ChessboardDnDProvider } from \"react-chessboard\";\r\nimport { Piece, Square } from \"react-chessboard/dist/chessboard/types\";\r\nimport { sounds } from \"shared/lib/sounds/sounds\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { urlParams } from \"shared/config/consts/urlParams\";\r\nimport axios from \"axios\";\r\nimport { createNewAbortController } from \"shared/lib/createNewAbortController/createNewAbortController\";\r\nimport { Modal } from \"shared/ui/Modal/Modal\";\r\nimport { FenInput } from \"shared/ui/FenInput/FenInput\";\r\n\r\ninterface StockfishOnlineChessboardProps {\r\n  className?: string;\r\n  defaultPosition?: string;\r\n}\r\n\r\ninterface LevelsConfig {\r\n  text: string;\r\n  depth: number;\r\n}\r\n\r\ntype BestMoveString = `bestmove ${string} ponder ${string}`;\r\n\r\ninterface ApiResponse {\r\n  success: boolean;\r\n  evaluation: number | null; // –õ–∏–±–æ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ü–µ–Ω–∫—É –¥–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏, –ª–∏–±–æ null, –µ—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Ç.\r\n  mate: null | number; // (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ, –∫–æ–≥–¥–∞ –º–∞—Ç —Å—Ç–∞–≤—è—Ç –±–µ–ª—ã–µ, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ, –∫–æ–≥–¥–∞ –º–∞—Ç —Å—Ç–∞–≤—è—Ç —á–µ—Ä–Ω—ã–µ)\r\n  bestmove: BestMoveString; // –°–æ–¥–µ—Ä–∂–∏—Ç –ª—É—á—à–∏–π —Ö–æ–¥ –≤ –¥–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏\r\n  continuation: string; // –í–µ—Ä—Ö–Ω—è—è –ª–∏–Ω–∏—è –¥–≤–∏–≥–∞—Ç–µ–ª—è –≤ –ø–æ–∑–∏—Ü–∏–∏.\r\n  data?: unknown; // –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ\r\n}\r\n\r\n// –£—Ä–æ–≤–Ω–∏ —Å –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏\r\nconst levels: Record<string, LevelsConfig> = {\r\n  easy: {\r\n    text: \"–õ–µ–≥–∫–æ ü§ì\",\r\n    depth: 5, // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –≥–ª—É–±–∏–Ω–∞\r\n  },\r\n  normal: {\r\n    text: \"–ù–æ—Ä–º–∞–ª—å–Ω–æ üßê\",\r\n    depth: 8, // –£–º–µ—Ä–µ–Ω–Ω–∞—è –≥–ª—É–±–∏–Ω–∞\r\n  },\r\n  hard: {\r\n    text: \"–°–ª–æ–∂–Ω–æ üòµ\",\r\n    depth: 15, // –ì–ª—É–±–æ–∫–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\r\n  },\r\n};\r\n\r\nfunction parseBestMoveLine(line: string): {\r\n  bestMove: string | null;\r\n  ponder: string | null;\r\n} {\r\n  // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∏ bestmove\r\n  const bestMoveMatch = line.match(/^bestmove\\s+(\\S{4,6})/);\r\n  const bestMove = bestMoveMatch ? bestMoveMatch[1] : null;\r\n\r\n  // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ ponder (–µ—Å–ª–∏ –µ—Å—Ç—å)\r\n  const ponderMatch = line.match(/\\sponder\\s+(\\S{4,6})$/);\r\n  const ponder = ponderMatch ? ponderMatch[1] : null;\r\n\r\n  return { bestMove, ponder };\r\n}\r\n\r\nconst API_URL = \"https://stockfish.online/api/s/v2.php\";\r\nconst MOVE_DELAY = 500;\r\n\r\nexport const StockfishOnlineChessboard = ({\r\n  className,\r\n  defaultPosition,\r\n}: StockfishOnlineChessboardProps) => {\r\n  const location = useLocation();\r\n  const params = useMemo(\r\n    () => new URLSearchParams(location.search),\r\n    [location.search]\r\n  );\r\n\r\n  const game = useMemo(() => new Chess(), []);\r\n\r\n  defaultPosition = useMemo(\r\n    () =>\r\n      defaultPosition ||\r\n      params.get(urlParams.chessDefaultPosition) ||\r\n      game.fen(),\r\n    [defaultPosition, params, game]\r\n  );\r\n\r\n  const [gamePosition, setGamePosition] = useState(defaultPosition);\r\n  const [stockfishLevel, setStockfishLevel] =\r\n    useState<keyof typeof levels>(\"easy\");\r\n\r\n  const abortControllerRef = useRef<AbortController>(null);\r\n  // –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é\r\n  useEffect(() => {\r\n    game.load(defaultPosition);\r\n  }, [defaultPosition, game]);\r\n\r\n  function move(moveObj: { from: string; to: string; promotion?: string }) {\r\n    const moved: {\r\n      captured?: string;\r\n      color: \"w\" | \"b\";\r\n      from: Square;\r\n      to: Square;\r\n      san?: string;\r\n      piece: Piece;\r\n    } | null = game.move(moveObj);\r\n\r\n    setGamePosition(game.fen());\r\n    console.log(moved);\r\n    if (moved === null) {\r\n      return false;\r\n    }\r\n\r\n    if (game.game_over() || game.in_draw()) {\r\n      sounds.checkmateSound.play();\r\n      setIsGameOverModal(true);\r\n      return false;\r\n    }\r\n\r\n    if (game.in_check()) {\r\n      sounds.checkSound.play();\r\n      return true;\r\n    }\r\n\r\n    if (moved.san === \"O-O-O\" || moved.san === \"O-O\") {\r\n      sounds.castlingSound.play();\r\n      return true;\r\n    }\r\n\r\n    if (moved.captured) {\r\n      sounds.captureSound.play();\r\n      return true;\r\n    }\r\n\r\n    sounds.moveSound.play();\r\n    return true;\r\n  }\r\n\r\n  async function findBestMove() {\r\n    try {\r\n      const { controller, signal } =\r\n        createNewAbortController(abortControllerRef);\r\n      abortControllerRef.current = controller;\r\n\r\n      const { data } = await axios.get<ApiResponse>(API_URL, {\r\n        params: {\r\n          fen: game.fen(),\r\n          depth: levels[stockfishLevel].depth,\r\n        },\r\n        signal: signal,\r\n      });\r\n\r\n      console.log(data);\r\n\r\n      if (!data.success) {\r\n        console.error(data.data);\r\n        return;\r\n      }\r\n\r\n      const { bestMove, ponder } = parseBestMoveLine(data.bestmove);\r\n\r\n      console.log(bestMove, ponder);\r\n\r\n      const notEnd = move({\r\n        from: bestMove.slice(0, 2),\r\n        to: bestMove.slice(2, 4),\r\n        promotion: bestMove.slice(4, 6).toLowerCase(),\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    } finally {\r\n      abortControllerRef.current = null;\r\n    }\r\n  }\r\n\r\n  function onDrop(sourceSquare: Square, targetSquare: Square, piece: Piece) {\r\n    console.log(sourceSquare, targetSquare, piece);\r\n    const notEnd = move({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: piece[1].toLowerCase(),\r\n    });\r\n\r\n    // –ó–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –∫–æ–º–ø—å—é—Ç–µ—Ä –Ω–µ —Ö–æ–¥–∏–ª –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ\r\n    if (notEnd) {\r\n      setTimeout(() => {\r\n        findBestMove();\r\n      }, MOVE_DELAY);\r\n    }\r\n    return notEnd;\r\n  }\r\n\r\n  const handleFenInputChange = (fen: string) => {\r\n    const { valid } = game.validate_fen(fen);\r\n    if (valid) {\r\n      game.load(fen);\r\n      setGamePosition(game.fen());\r\n    }\r\n  };\r\n\r\n  const [isGameOverModal, setIsGameOverModal] = useState(false);\r\n\r\n  const onToggleModal = useCallback(() => {\r\n    setIsGameOverModal(!isGameOverModal);\r\n  }, [isGameOverModal]);\r\n\r\n  return (\r\n    <div className={classNames(cls.StockfishOnlineChessboard, {}, [className])}>\r\n      <div className={cls.chessboardWrapper}>\r\n        <div className={cls.buttons}>\r\n          {Object.entries(levels).map(([level, config]) => (\r\n            <Button\r\n              key={`${level}`}\r\n              onClick={() => setStockfishLevel(level)}\r\n              theme={ButtonTheme.CLASSIC}\r\n              active={stockfishLevel === level}\r\n            >\r\n              {config.text}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n\r\n        <Chessboard\r\n          id=\"chessboard\"\r\n          position={gamePosition}\r\n          onPieceDrop={onDrop}\r\n        />\r\n\r\n        <div className={cls.buttons}>\r\n          <Button\r\n            onClick={() => {\r\n              game.reset();\r\n              setGamePosition(game.fen());\r\n            }}\r\n          >\r\n            –ù–æ–≤–∞—è –∏–≥—Ä–∞\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              game.undo();\r\n              game.undo();\r\n              setGamePosition(game.fen());\r\n            }}\r\n          >\r\n            –ù–∞–∑–∞–¥\r\n          </Button>\r\n        </div>\r\n        <FenInput fenPosition={gamePosition} onChange={handleFenInputChange} />\r\n      </div>\r\n      <Modal isOpen={isGameOverModal} onClose={onToggleModal}>\r\n        <p>–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!</p>\r\n        <div className={cls.buttons}>\r\n          <Button\r\n            onClick={() => {\r\n              game.reset();\r\n              setGamePosition(game.fen());\r\n              setIsGameOverModal(false);\r\n            }}\r\n          >\r\n            –ù–æ–≤–∞—è –∏–≥—Ä–∞\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setIsGameOverModal(false);\r\n            }}\r\n          >\r\n            –ù–∞–∑–∞–¥\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","export function createNewAbortController(\r\n  abortControllerRef: React.RefObject<AbortController | null>\r\n): { controller: AbortController; signal: AbortSignal } {\r\n  if (abortControllerRef.current) {\r\n    abortControllerRef.current.abort(); // –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã\r\n  }\r\n  abortControllerRef.current = new AbortController(); // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π AbortController\r\n  return {\r\n    controller: abortControllerRef.current,\r\n    signal: abortControllerRef.current.signal,\r\n  };\r\n}\r\n","import { StockfishOnlineChessboard } from \"widgets/StockfishOnlineChessboard\";\r\n\r\ninterface StockfishOnlineProps {\r\n  className?: string;\r\n}\r\n\r\nconst StockfishOnline = ({ className }: StockfishOnlineProps) => {\r\n  return (\r\n    <div>\r\n      <StockfishOnlineChessboard />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockfishOnline;\r\n","export const urlParams = {\r\n  chessDefaultPosition: \"board-pos\",\r\n};\r\n","const volume = 0.2;\r\n\r\nexport const sounds = {\r\n  captureSound: new Audio(\"./sound/capture.mp3\"),\r\n  castlingSound: new Audio(\"./sound/castling.mp3\"),\r\n  checkSound: new Audio(\"./sound/check.mp3\"),\r\n  checkmateSound: new Audio(\"./sound/checkmate.mp3\"),\r\n  moveSound: new Audio(\"./sound/move.mp3\"),\r\n};\r\n\r\nfor (let key of Object.keys(sounds)) {\r\n  sounds[key].volume = volume;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"FenInput\":\"FenInput_FenInput__+TRAY\",\"copyButton\":\"FenInput_copyButton__j+z8x\"};","// extracted by mini-css-extract-plugin\nexport default {\"Input\":\"Input_Input__hHLh7\"};","import { classNames } from \"shared/lib/classNames/classNames\";\r\nimport cls from \"./Input.module.scss\";\r\nimport { InputHTMLAttributes } from \"react\";\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  className?: string;\r\n}\r\n\r\nexport const Input = (props: InputProps) => {\r\n  const { className, ...restProps } = props;\r\n  return (\r\n    <input className={classNames(cls.Input, {}, [className])} {...restProps} />\r\n  );\r\n};\r\n","import { classNames } from \"shared/lib/classNames/classNames\";\r\nimport cls from \"./FenInput.module.scss\";\r\nimport { Input } from \"../Input/Input\";\r\nimport { ChangeEvent } from \"react\";\r\nimport { Button, ButtonSize, ButtonTheme } from \"../Button/Button\";\r\nimport copyImg from \"shared/assets/copy.png\";\r\n\r\ninterface FenInputProps {\r\n  className?: string;\r\n  fenPosition: string;\r\n  onChange: (fen: string) => void;\r\n}\r\n\r\nexport const FenInput = ({\r\n  className,\r\n  fenPosition,\r\n  onChange,\r\n}: FenInputProps) => {\r\n  const handleFenInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (onChange) {\r\n      onChange(e.target.value);\r\n    }\r\n  };\r\n\r\n  const copy = () => {\r\n    navigator.clipboard.writeText(fenPosition);\r\n    console.log(\"copied\");\r\n  };\r\n\r\n  return (\r\n    <div className={classNames(cls.FenInput, {}, [className])}>\r\n      <Input\r\n        value={fenPosition}\r\n        onChange={handleFenInputChange}\r\n        placeholder=\"–í—Å—Ç–∞–≤—å—Ç–µ –ø–æ–∑–∏—Ü–∏—é FEN, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\"\r\n      />\r\n      <Button\r\n        onClick={copy}\r\n        theme={ButtonTheme.CLEAR}\r\n        className={cls.copyButton}\r\n        square\r\n      >\r\n        <img src={copyImg} alt=\"–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å\" />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import { ReactNode } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\ninterface PortalProps {\r\n  children: ReactNode;\r\n  element?: HTMLElement\r\n}\r\n\r\nexport const Portal = (props: PortalProps) => {\r\n  const {\r\n    children,\r\n    element = document.body,\r\n  } = props;\r\n\r\n  return (\r\n    createPortal(children, element)\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Modal\":\"Modal_Modal__47RDU\",\"overlay\":\"Modal_overlay__lpaR1\",\"content\":\"Modal_content__TWhw1\",\"opened\":\"Modal_opened__iZlPA\",\"isClosing\":\"Modal_isClosing__AoAui\"};","import { classNames } from \"shared/lib/classNames/classNames\";\r\nimport {\r\n  MouseEvent,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { Portal } from \"shared/ui/Portal/Portal\";\r\nimport cls from \"./Modal.module.scss\";\r\n\r\ninterface ModalProps {\r\n  className?: string;\r\n  children?: ReactNode;\r\n  isOpen?: boolean;\r\n  onClose?: () => void;\r\n}\r\n\r\nconst ANIMATION_DELAY = 300;\r\n\r\nexport const Modal = (props: ModalProps) => {\r\n  const { className, children, isOpen, onClose } = props;\r\n\r\n  const [isClosing, setIsClosing] = useState(false);\r\n  const timerRef = useRef<ReturnType<typeof setTimeout>>(null);\r\n\r\n  const closeHandler = useCallback(() => {\r\n    if (onClose) {\r\n      setIsClosing(true);\r\n      timerRef.current = setTimeout(() => {\r\n        onClose();\r\n        setIsClosing(false);\r\n      }, ANIMATION_DELAY);\r\n    }\r\n  }, [onClose]);\r\n\r\n  const onContentClick = (e: MouseEvent) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const onKeyDown = useCallback(\r\n    (e: KeyboardEvent) => {\r\n      if (e.key === \"Escape\") {\r\n        closeHandler();\r\n      }\r\n    },\r\n    [closeHandler]\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(\"\");\r\n\r\n    if (isOpen) {\r\n      window.addEventListener(\"keydown\", onKeyDown);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timerRef.current);\r\n      window.removeEventListener(\"keydown\", onKeyDown);\r\n    };\r\n  }, [isOpen, onKeyDown]);\r\n\r\n  const mods: Record<string, boolean> = {\r\n    [cls.opened]: isOpen,\r\n    [cls.isClosing]: isClosing,\r\n  };\r\n\r\n  return (\r\n    <Portal>\r\n      <div className={classNames(cls.Modal, mods, [className])}>\r\n        <div className={cls.overlay} onClick={closeHandler}>\r\n          <div className={cls.content} onClick={onContentClick}>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Portal>\r\n  );\r\n};\r\n"],"names":["levels","easy","text","depth","normal","hard","StockfishOnlineChessboard","_ref","className","defaultPosition","location","useLocation","params","useMemo","URLSearchParams","search","game","Chess","get","urlParams","chessDefaultPosition","fen","gamePosition","setGamePosition","useState","stockfishLevel","setStockfishLevel","abortControllerRef","useRef","move","moveObj","moved","console","log","game_over","in_draw","sounds","checkmateSound","play","setIsGameOverModal","in_check","checkSound","san","castlingSound","captured","captureSound","moveSound","async","findBestMove","controller","signal","current","abort","AbortController","createNewAbortController","data","axios","success","error","bestMove","ponder","line","bestMoveMatch","match","ponderMatch","parseBestMoveLine","bestmove","from","slice","to","promotion","toLowerCase","useEffect","load","isGameOverModal","onToggleModal","useCallback","_jsxs","classNames","cls","children","_jsx","Object","entries","map","_ref2","level","config","Button","onClick","theme","ButtonTheme","CLASSIC","active","concat","Chessboard","id","position","onPieceDrop","sourceSquare","targetSquare","piece","notEnd","setTimeout","reset","undo","FenInput","fenPosition","onChange","valid","validate_fen","Modal","isOpen","onClose","Audio","key","keys","volume","Input","props","restProps","_objectWithoutProperties","_excluded","_objectSpread","value","e","target","placeholder","copy","navigator","clipboard","writeText","CLEAR","square","src","alt","Portal","element","document","body","createPortal","isClosing","setIsClosing","timerRef","closeHandler","onKeyDown","window","addEventListener","clearTimeout","removeEventListener","mods","stopPropagation"],"sourceRoot":""}